{"version":3,"sources":["serviceWorker.ts","features/card/Card.reducer.ts","utilities/config/color.ts","utilities/config/mediaQuery.ts","utilities/config/messages.config.ts","utilities/config/index.ts","common/ui/error/style/Icon.tsx","common/ui/error/style/Text.tsx","common/ui/error/style/index.ts","common/ui/error/index.tsx","common/ui/hint/style/HintText.tsx","common/ui/hint/style/HintIcon.tsx","common/ui/hint/style/index.tsx","common/ui/hint/index.tsx","common/ui/spinner/index.tsx","common/ui/toggle/style/Button.tsx","common/ui/toggle/style/Label.tsx","common/ui/toggle/style/CheckBox.tsx","common/ui/toggle/style/index.tsx","common/ui/toggle/index.tsx","common/ui/label/style/index.tsx","common/ui/label/index.tsx","common/ui/textbox/styles/Input.tsx","common/ui/textbox/styles/index.tsx","common/ui/textbox/index.tsx","common/ui/selectbox/Options.tsx","common/ui/selectbox/styles/Input.tsx","common/ui/selectbox/styles/index.tsx","common/ui/selectbox/index.tsx","features/card/style/Body.tsx","features/card/style/Footer.tsx","features/card/style/index.tsx","utilities/styles/layout/Row.tsx","utilities/styles/layout/Container.tsx","features/card/Card.selector.ts","features/card/Card.container.tsx","features/card/components/Card.component.tsx","features/criterias/Criterias.types.ts","features/criterias/Criterias.reducer.ts","features/criterias/components/DatePicker.component.tsx","features/criterias/components/EmployeeStatus.component.tsx","features/criterias/Criterias.Selector.ts","features/criterias/Criterias.container.tsx","features/criterias/Criterias.action.ts","features/price-base/PriceBase.types.ts","constants/pbb.ts","features/price-base/PriceBase.action.ts","features/price-base/PriceBase.reducer.ts","features/price-base/components/DurationComponent.tsx","features/price-base/components/BasicAmountComponet.tsx","features/price-base/PriceBase.selector.ts","features/price-base/PriceBase.container.tsx","features/salary-info/SalaryInfo.reducer.ts","features/salary-info/components/SalaryInfo.component.tsx","features/salary-info/SalaryInfo.action.ts","features/salary-info/SalaryInfo.types.ts","utilities/styles/GlobalStyle.tsx","features/app/style/Title.tsx","utilities/config/moment.config.ts","features/app/App.component.tsx","store/middlewares/error/reducer.ts","store/rootReducers.ts","features/card/Card.types.ts","store/middlewares/error/types.ts","store/index.ts","store/middlewares/error/middleware.ts","index.tsx"],"names":["Boolean","window","location","hostname","match","initialState","loaded","data","text","primary","secondary","lighten","th","danger","darken","white","lightGray","darkGray","minWidth","maxWidth","rangeSize","size","maxSizePhone","minSizeTabletAndUp","minSizeLaptopAndUp","maxSizeTablet","smallSize","mediumSize","customMinWidth","customMaxWidth","customRangeSize","salaryModels","value","employeeStatus","sharedMessages","period","minPeriod","minSalary","errorMessages","notFoundPBB","statusIsRequired","birthdayIsRequired","hintMessages","changePBB","styling","fontFamily","fontSmallSize","fontMedSize","fontBigSize","opacity","state","Icon","styled","span","colors","Text","StyledError","div","bg","Error","error","props","errors","Object","values","map","index","key","children","HintText","p","diraction","HintIcon","StyledHint","Hint","hintText","load8","keyframes","ToggleButton","isOn","ToggleLabel","label","CheckBox","input","attrs","type","StyledToggle","Button","Label","Toggle","name","handleToggle","checked","onChange","id","htmlFor","LebalWrap","mediaQuery","labelText","labelClass","toggleName","toggleState","className","Input","StyledTextBox","TextBox","rest","Options","select","StyledSelectBox","SelectBox","options","labelClassName","option","Body","ul","ListItem","li","Footer","StyledCard","Row","col","Container","getPBB1","priceBase","pbb1","getPBB2","pbb2","getCards","createSelector","salaryInfo","salaryModel","basicSalary","PBB1","PBB2","SalaryModel","BasicSalary","cards","generateCard","pbb","yearlySalary","ConvertedBasicSalary","max10PBB","max15PBB","parentalSalaryUpto10PBB","excessFixedSalary","Math","min","parentalSalaryAbove10PBB","monthlyTotal","connect","length","cardData","SET_STATUS","SET_BIRTHDAY","birthday","status","DatePickerComponent","changeDateHandler","useState","focused","setFocused","date","onDateChange","onFocusChange","placeholder","displayFormat","hideKeyboardShortcutsPanel","showDefaultInputIcon","showClearDate","numberOfMonths","isOutsideRange","day","isAfter","moment","isBefore","subtract","EmployeeStatusComponent","changeSalaryHandler","getBirthday","critera","getStatusError","getBirthdayError","statusError","birthdayError","dispatch","setStatus","e","target","SET_PBB1","SET_PBB2","SET_END_DATE","PBB","setPBB1","setPBB2","setEndDate","endDate","getState","startDate","duration","diff","setDuration","firstYear","year","secondYear","sameYear","isSame","isBetween","add","setStartDate","isNaN","countOfDays","undefined","Duration","focusedInput","this","onDatesChange","startDateId","endDateId","setState","startDatePlaceholderText","endDatePlaceholderText","showClearDates","reopenPickerOnClearDates","innerWidth","React","BasicAmount","setToggleState","disabled","getPriceBaseErrors","getYears","years","getCountOfDays","onPBB1ChangeHandler","onPBB2ChangeHandler","strD","endD","basiceSalaryValue","basiceSalaryChangeHandler","salary","setSalaryModelChangeHandler","setSalaryModel","axis","xstep","xmin","xmax","x","parseInt","toString","styles","track","width","backgroundColor","height","borderRadius","boxShadow","active","thumb","cursor","GlobalStyle","createGlobalStyle","normalize","Title","h3","mt","updateLocale","months","monthsShort","weekdays","weekdaysMin","AppComponent","combineReducers","action","payload","middlewares","thunk","next","middleWareEnhancer","applyMiddleware","store","createStore","rootReducers","composeWithDevTools","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.02273988.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {\n  CardState,\n  LOAD_CARD,\n  LOAD_CARD_SECCUSS,\n  LOAD_CARD_FAILURE,\n  CardActionTypes\n} from \"./Card.types\";\n\nexport const initialState: CardState = {\n  loaded: false,\n  data: []\n};\n\nexport default (state = initialState, action: CardActionTypes): CardState => {\n  switch (action.type) {\n    case LOAD_CARD:\n      return {\n        loaded: true,\n        data: [...state.data]\n      };\n    case LOAD_CARD_SECCUSS:\n      return {\n        loaded: false,\n        data: [...state.data, action.payload]\n      };\n    case LOAD_CARD_FAILURE:\n      return {\n        loaded: false,\n        data: []\n      };\n\n    default:\n      return state;\n  }\n};\n","import { lighten, darken } from \"polished\";\n\nexport default {\n  text: \"#3C3C3B\",\n  primary: \"#DB3E77\",\n  secondary: lighten(0.15, \"#DB3E77\"),\n  th: lighten(0.3, \"#DB3E77\"),\n  danger: darken(0.2, \"#DB3E77\"),\n  white: \"#FFFFFF\",\n  lightGray: \"#EDEDED\",\n  darkGray: \"#CCCCCC\"\n};\n","const minWidth = (minWidth: number) =>\n  `@media only screen and (min-width: ${minWidth}px)`;\n/*const deviceWidth = (deviceWidth: number) =>\n  `@media only screen and (device-width: ${deviceWidth}px)`;*/\nconst maxWidth = (maxWidth: number) =>\n  `@media only screen and (max-width: ${maxWidth}px)`;\nconst rangeSize = (minWidth: number, maxWidth: number) =>\n  `@media only screen and (min-width: ${minWidth}px) and (max-width: ${maxWidth}px)`;\n\nexport const size = {\n  mobileM: 375,\n  mobileL: 425,\n  tablet: 768,\n  custom: 945,\n  laptop: 1024\n  /*  \n  laptopL: 1440,\n  desktop: 2000,\n  xSmall: 320,\n  small: 576,\n  medium: 768,\n  large: 992,\n  xLarge: 1200 */\n};\n\nexport default {\n  maxSizePhone: maxWidth(size.tablet),\n  minSizeTabletAndUp: minWidth(size.tablet),\n  minSizeLaptopAndUp: minWidth(size.laptop),\n  maxSizeTablet: maxWidth(size.laptop),\n  smallSize: maxWidth(size.mobileM),\n  mediumSize: rangeSize(size.mobileM, size.custom),\n  //bigSize: minWidth(946),\n  customMinWidth: minWidth,\n  customMaxWidth: maxWidth,\n  customRangeSize: rangeSize\n};\n\n/*\nexport default {\n  phone: maxWidth(size.tablet),\n  minSizeTabletAndUp: minWidth(size.tablet),\n  minSizeLaptopAndUp: minWidth(size.laptop),\n  maxSizePhone: maxWidth(size.tablet),\n  maxSizeTablet: maxWidth(size.laptop),\n  maxSizeOfScreen: maxWidth(size.desktop),\n  smallScreen: rangeSize(size.mobileS, size.tablet),\n  mediumScreen: rangeSize(size.tablet, size.laptopL),\n  BigScreen: rangeSize(size.laptop, size.desktop),\n  devicePortrait: rangeSize(\n    size.mobileL,\n    size.large,\n    \"portrait\"\n  ),\n  deviceLandscape: rangeSize(size.mobileL, size.large, \"landscape\"),\n  customMinWidth: minWidth,\n  customMaxWidth: maxWidth,\n  customRangeSize: rangeSize\n};*/\n","export const salaryModels = [\n  { value: \"\", text: \"Välj din lönemodell\" },\n  { value: \"Rörlig\", text: \"Rörlig\" },\n  { value: \"Stabil\", text: \"Stabil\" }\n];\n\nexport const employeeStatus = [\n  { value: \"\", text: \"Välj värdet från listan\" },\n  { value: \"mer än ett år\", text: \"mer än ett år\" },\n  { value: \"mer än tre år\", text: \"mer än tre år\" }\n];\n\nconst sharedMessages = {\n  period:\n    \"Din föräldraledighet måste tas ut inom 24 månader efter barnets födelse eller adoption.\",\n  minPeriod: \"Perioden måste vara mer än 30 dagar.\",\n  minSalary: \"Lönen måste vara minst 30000 kr\"\n};\n\nexport const errorMessages = {\n  ...sharedMessages,\n  notFoundPBB: \"Tyvärr kunde inte hitta PBB för \",\n  statusIsRequired: \"Välj värdet från listan.\",\n  birthdayIsRequired: \"Barn födelsedag fält krävs\"\n};\n\nexport const hintMessages = {\n  ...sharedMessages,\n  employeeStatus: `För att ta del av Dynabytes föräldralönsersättning behöver du ha haft \n  en sammanhängande anställning på Dynabyte i mer än ett år.`,\n  changePBB: \"Du kan redigera PBB genom att aktivera fältet\"\n};\n","import colors from \"./color\";\nimport mediaQuery from \"./mediaQuery\";\nimport localDateConfig from \"./moment.config\";\n\nconst styling = {\n  typography: {\n    fontFamily: \"'Noto Sans',sans-serif\",\n    fontSmallSize: \"14px\",\n    fontMedSize: \"16px\",\n    fontBigSize: \"20px\"\n  },\n  borderShadow: (opacity: number = 0.15, state: string = \"\") =>\n    `0 2px 4px rgba(0, 0, 0, ${opacity}) ${state}`\n};\n\nexport * from \"./messages.config\";\nexport * from \"./moment.config\";\n\nexport { styling, colors, localDateConfig, mediaQuery };\n","import styled from \"styled-components\";\nimport { colors } from \"../../../../utilities/config\";\n\nexport const Icon = styled.span`\n  border: 3px solid ${colors.danger};\n  border-radius: 50%;\n  padding: 2px 4px 0;\n  margin-right: 5px;\n  font-size: 12px;\n  align-self: center;\n\n  &::before {\n    content: \"X\";\n    color: ${colors.danger};\n    font-weight: bold;\n  }\n`;\n","import styled from \"styled-components\";\nimport { colors, styling } from \"../../../../utilities/config\";\n\nexport const Text = styled.span`\n  color: ${colors.danger};\n  font-size: ${styling.typography.fontSmallSize};\n`;\n","import styled from \"styled-components\";\nimport { IError } from \"../IError\";\n\nimport { Icon } from \"./Icon\";\nimport { Text } from \"./Text\";\n\nimport { colors, styling } from \"../../../../utilities/config\";\n\nconst StyledError: any = styled.div<IError>`\n  margin-top: 10px;\n  margin-bottom: 15px;\n\n  display: flex;\n  align-items: center;\n\n  ${({ bg = false }: IError) =>\n    bg &&\n    `\n      background: ${colors.secondary};\n      border: 3px solid ${colors.primary};\n      padding: 10px 5px;\n      \n      p {\n        font-weight: bold;\n        font-size: ${styling.typography.fontMedSize};\n      }\n    `}\n`;\n\nStyledError.Icon = Icon;\nStyledError.Text = Text;\n\nexport default StyledError;\n","import React from \"react\";\nimport StyledError from \"./style\";\nimport { IError } from \"./IError\";\n\nconst Error: React.FC<IError> = ({ error, bg, ...props }) => {\n  return (\n    <StyledError bg={bg}>\n      <StyledError.Icon />\n      <StyledError.Text>\n        {error}\n        {typeof props.errors === \"object\"\n          ? Object.values(props.errors).map((value: any, index) => (\n              <p key={index}>{value}</p>\n            ))\n          : props.children}\n      </StyledError.Text>\n    </StyledError>\n  );\n};\n\nexport default Error;\n","import styled from \"styled-components\";\n\nimport { IHint } from \"../IHint\";\nimport { colors } from \"../../../../utilities/config\";\n\nexport const HintText = styled.p<IHint>`\n  position: absolute;\n  top: 26px;\n  ${(props: IHint) =>\n    props.diraction === \"right\" ? \"right:1px\" : \"left: -83px;\"}\n  font-size: 14px;\n  padding: 15px 10px;\n  z-index: 10;\n  /*width: 350px;*/\n  display: none;\n  border: 2px solid ${colors.primary};\n  background: ${colors.secondary};\n  color: ${colors.white};\n  white-space: pre;\n\n  &::before {\n    content: \"\";\n    width: 0;\n    height: 0;\n    border-left: 5px solid transparent;\n    border-right: 5px solid transparent;\n    border-bottom: 10px solid ${colors.primary};\n    position: absolute;\n    top: -10px;\n    ${(props: IHint) =>\n      props.diraction === \"right\" ? \"right:12px\" : \"left: 86px;\"}\n  }\n`;\n","import styled from \"styled-components\";\nimport { HintText } from \"./HintText\";\nimport { colors } from \"../../../../utilities/config\";\n\nexport const HintIcon = styled.span`\n  background: ${colors.primary};\n  padding: 0 7px;\n  border: 1px solid ${colors.secondary};\n  border-radius: 50%;\n  color: ${colors.white};\n  font-family: serif;\n  font-style: italic;\n  &:hover {\n    background: ${colors.secondary};\n    + ${HintText} {\n      display: block;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nimport { HintText } from \"./HintText\";\nimport { HintIcon } from \"./HintIcon\";\n\nimport { IHint } from \"../IHint\";\n\nconst StyledHint: any = styled.div<IHint>`\n  position: relative;\n  width: 30px;\n`;\n\nStyledHint.Icon = HintIcon;\nStyledHint.Text = HintText;\n\nexport default StyledHint;\n","import React from \"react\";\nimport StyledHint from \"./style\";\nimport { IHint } from \"./IHint\";\n\nconst Hint: React.FC<IHint> = ({ hintText, diraction = \"left\" }) => {\n  return (\n    <StyledHint>\n      <StyledHint.Icon>i</StyledHint.Icon>\n      <StyledHint.Text diraction={diraction}>{hintText}</StyledHint.Text>\n    </StyledHint>\n  );\n};\n\nexport default Hint;\n","import styled, { keyframes } from \"styled-components\";\nimport { ISpinner } from \"./ISpinner\";\n\nconst load8 = keyframes`\n    0% {\n      -webkit-transform: rotate(0deg);\n      transform: rotate(0deg);\n    }\n    100% {\n      -webkit-transform: rotate(360deg);\n      transform: rotate(360deg);\n    }\n  \n`;\n\nconst Spinner = styled.div<ISpinner>`\n  margin: 60px auto;\n  font-size: 10px;\n  position: relative;\n  text-indent: -9999em;\n  border-top: 1.1em solid rgba(238, 39, 119, 0.2);\n  border-right: 1.1em solid rgba(238, 39, 119, 0.2);\n  border-bottom: 1.1em solid rgba(238, 39, 119, 0.2);\n  border-left: 1.1em solid #ee2777;\n  transform: translateZ(0);\n  animation: ${load8} 1.1s infinite linear;\n\n  border-radius: 50%;\n  width: ${({ size = 10 }) => size}em;\n  height: ${({ size = 10 }) => size}em;\n\n  &:after {\n    border-radius: 50%;\n    width: 10em;\n    height: 10em;\n  }\n`;\n\nexport default Spinner;\n","import styled from \"styled-components\";\nimport { colors } from \"../../../../utilities/config\";\nimport { IToggle } from \"../IToggle\";\n\nexport const ToggleButton = styled.span<IToggle>`\n  content: \"\";\n  position: absolute;\n  top: -3px;\n  left: 0px;\n  width: 28px;\n  height: 28px;\n  border-radius: 45px;\n  transition: 0.2s;\n  background: ${({ isOn }) => (isOn ? colors.primary : colors.white)};\n  box-shadow: 0 0 2px 0 rgba(10, 10, 10, 0.29);\n  border: 1px solid ${colors.white};\n`;\n","import styled from \"styled-components\";\nimport { ToggleButton } from \"./Button\";\n\nimport { colors } from \"../../../../utilities/config\";\n\nexport const ToggleLabel: any = styled.label`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  cursor: pointer;\n  width: 70px;\n  height: 25px;\n  border-radius: 100px;\n  position: relative;\n  transition: background-color 0.2s;\n  background: ${colors.darkGray};\n  border: 1px solid ${colors.white};\n\n  &:active ${ToggleButton} {\n    width: 60px;\n  }\n`;\n","import styled from \"styled-components\";\nimport { ToggleLabel } from \"./Label\";\nimport { ToggleButton } from \"./Button\";\n\nimport { colors } from \"../../../../utilities/config\";\n\nexport const CheckBox = styled.input.attrs({ type: \"checkbox\" })`\n  height: 0;\n  width: 0;\n  visibility: hidden;\n  position: absolute;\n\n  &:checked + ${ToggleLabel} {\n    background: ${colors.secondary};\n    ${ToggleButton} {\n      left: 100%; /*calc(100% - 2px);*/\n      transform: translateX(-100%);\n      background: ${colors.primary};\n    }\n  }\n`;\n","import styled from \"styled-components\";\nimport { ToggleButton } from \"./Button\";\nimport { CheckBox } from \"./CheckBox\";\nimport { ToggleLabel } from \"./Label\";\n\nconst StyledToggle: any = styled.div`\n  outline: none;\n`;\n\nStyledToggle.CheckBox = CheckBox;\nStyledToggle.Button = ToggleButton;\nStyledToggle.Label = ToggleLabel;\n\nexport default StyledToggle;\n","import React from \"react\";\nimport StyledToggle from \"./style\";\nimport { IToggle } from \"./IToggle\";\n\nconst Toggle: React.FC<IToggle> = ({ name, isOn, handleToggle }) => {\n  return (\n    <StyledToggle isOn={isOn}>\n      <StyledToggle.CheckBox\n        checked={isOn}\n        onChange={handleToggle}\n        id={name}\n        name={name}\n      />\n\n      <StyledToggle.Label htmlFor={name}>\n        <StyledToggle.Button />\n      </StyledToggle.Label>\n    </StyledToggle>\n  );\n};\n\nexport default Toggle;\n","import styled from \"styled-components\";\nimport { mediaQuery } from \"../../../../utilities/config\";\n\nconst LebalWrap: any = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  margin-bottom: 6px;\n\n  ${mediaQuery.minSizeLaptopAndUp} {\n    min-height: 25px;\n  }\n\n  ${mediaQuery.maxSizeTablet} {\n    min-height: 35px;\n  }\n\n  label {\n    flex: 1;\n  }\n`;\n\nexport default LebalWrap;\n","import React from \"react\";\nimport Hint from \"../hint\";\nimport Toggle from \"../toggle\";\n\nimport LabelWrap from \"./style\";\nimport { ILabel, ILabelSharedProps, ILabelToggle } from \"./ILabel\";\n\nexport const Label: React.FC<ILabel & ILabelSharedProps & ILabelToggle> = ({\n  htmlFor,\n  labelText,\n  labelClass,\n  hintText,\n  children,\n  handleToggle,\n  toggleName,\n  toggleState = false,\n  ...rest\n}) => {\n  return (\n    <LabelWrap>\n      {hintText && <Hint hintText={hintText} />}\n\n      <label htmlFor={htmlFor} className={labelClass}>\n        {labelText}\n        {children}\n      </label>\n\n      {toggleName && (\n        <Toggle\n          isOn={toggleState}\n          name={toggleName}\n          handleToggle={handleToggle}\n        />\n      )}\n    </LabelWrap>\n  );\n};\n","import styled from \"styled-components\";\nimport { ITextBox } from \"../ITextBox\";\nimport { colors } from \"../../../../utilities/config\";\n\nconst Input = styled.input<ITextBox>`\n  height: 60px;\n  width: 100%;\n  text-align: center;\n  border: 1px solid ${({ error }) => (error ? colors.danger : \"#eeeeee\")};\n  background: #fff;\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.15);\n  outline-color: ${colors.primary};\n\n  &:disabled {\n    background: ${colors.lightGray};\n    color: ${colors.darkGray};\n    cursor: not-allowed;\n  }\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\nimport Input from \"./Input\";\nimport { Label } from \"../../label\";\n\nconst StyledTextBox: any = styled.div`\n  width: 100%;\n`;\n\nStyledTextBox.Label = Label;\nStyledTextBox.Input = Input;\nexport default StyledTextBox;\n","import * as React from \"react\";\nimport { ILabelSharedProps, ILabelToggle } from \"../label/ILabel\";\nimport { ITextBox } from \"./ITextBox\";\n\nimport { Label } from \"../label\";\nimport StyledTextBox from \"./styles\";\nimport Error from \"../error/style\";\n\ntype OnChangeProps = {\n  onChange: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  value: string;\n  disabled?: boolean;\n};\n\nconst TextBox: React.FC<ILabelSharedProps &\n  ITextBox &\n  ILabelToggle &\n  OnChangeProps> = ({\n  labelText,\n  labelClass,\n  hintText,\n  name,\n  error,\n  type = \"text\",\n  ...rest\n}) => (\n  <StyledTextBox>\n    {labelText && (\n      <Label\n        htmlFor={name}\n        labelText={labelText}\n        labelClass={labelClass}\n        hintText={hintText}\n        toggleName={rest.toggleName}\n        toggleState={rest.toggleState}\n        handleToggle={rest.handleToggle}\n      />\n    )}\n    <StyledTextBox.Input id={name} name={name} {...rest} error={!!error} />\n    {error && (\n      <Error>\n        <Error.Icon />\n        <Error.Text>{error}</Error.Text>\n      </Error>\n    )}\n  </StyledTextBox>\n);\n\nexport default TextBox;\n","import React from \"react\";\nimport { IOptoinProps } from \"./IOptoinProps\";\n\nexport const Options: React.FC<IOptoinProps> = ({ value, text }) => {\n  return <option value={value}>{text}</option>;\n};\n","import styled from \"styled-components\";\nimport { styling, colors } from \"../../../../utilities/config\";\n\nconst Input = styled.select`\n  height: 60px;\n  width: 100%;\n  font-size: 1em;\n  text-align-last: center;\n  color: #000000;\n  border: 1px solid #eeeeee;\n  margin-bottom: 10px;\n  font-weight: 400;\n  padding-left: 25px;\n  box-shadow: ${styling.borderShadow()};\n  background: ${colors.white};\n  outline-color: ${colors.primary};\n`;\n\nexport default Input;\n","import styled from \"styled-components\";\nimport Input from \"./Input\";\nimport { Label } from \"../../label\";\n\nconst StyledSelectBox: any = styled.div`\n  width: 100%;\n`;\n\nStyledSelectBox.Label = Label;\nStyledSelectBox.Input = Input;\n\nexport default StyledSelectBox;\n","import React from \"react\";\nimport { Options } from \"./Options\";\n\nimport { ISelectBoxProps } from \"./ISelectBox\";\nimport { IOptoinProps } from \"./IOptoinProps\";\nimport { ILabelSharedProps } from \"../label/ILabel\";\nimport StyledSelectBox from \"./styles\";\nimport Error from \"../error\";\n\ntype c = {\n  value?: string;\n  onChange?: (e: React.ChangeEvent<HTMLInputElement>) => void;\n};\n\nexport const SelectBox: React.FC<ILabelSharedProps & ISelectBoxProps & c> = ({\n  labelText,\n  labelClass,\n  hintText,\n  name,\n  options,\n  ...rest\n}) => (\n  <StyledSelectBox>\n    {labelText && (\n      <StyledSelectBox.Label\n        htmlFor={name}\n        labelText={labelText}\n        labelClassName={labelClass}\n        hintText={hintText}\n      />\n    )}\n    <StyledSelectBox.Input name={name} id={name} {...rest}>\n      {options.map((option: IOptoinProps) => (\n        <Options key={option.value} value={option.value} text={option.text} />\n      ))}\n    </StyledSelectBox.Input>\n\n    {rest.error && <Error error={rest.error} />}\n  </StyledSelectBox>\n);\n","import styled from \"styled-components\";\nimport { colors } from \"../../../utilities/config\";\n\nexport const Body = styled.ul`\n  list-style: none;\n  padding: 15px;\n`;\n\nexport const ListItem = styled.li`\n  padding: 10px 5px 5px;\n  display: flex;\n  justify-content: space-between;\n\n  &:not(:last-child) {\n    border-bottom: 1px solid #eeeeee;\n  }\n\n  &:hover {\n    background: ${colors.primary};\n    color: ${colors.white};\n  }\n`;\n","import styled from \"styled-components\";\nimport { colors } from \"../../../utilities/config\";\n\nexport const Footer = styled.div`\n  display: flex;\n  justify-content: space-between;\n  padding: 15px;\n  font-size: 1.05em;\n  font-weight: bold;\n\n  background: ${colors.primary};\n  color: ${colors.white};\n`;\n","import styled from \"styled-components\";\nimport { styling } from \"../../../utilities/config\";\n\nimport { Body, ListItem } from \"./Body\";\nimport { Footer } from \"./Footer\";\n\nconst StyledCard: any = styled.div`\n  height: 100%;\n  width: 100%;\n  border: 1px solid #eeeeee;\n  background: #fff;\n  box-shadow: ${styling.borderShadow()};\n  transition: 0.4s;\n\n  &:hover {\n    transform: scale(1.02);\n    box-shadow: ${styling.borderShadow(0.3)};\n  }\n`;\n\nStyledCard.Body = Body;\nStyledCard.ListItem = ListItem;\nStyledCard.Footer = Footer;\n\nexport default StyledCard;\n","import styled from \"styled-components\";\nimport { mediaQuery } from \"../../config\";\ninterface IProps {\n  col: number;\n}\n\nconst Row = styled.div<IProps>`\n  display: grid;\n\n  ${mediaQuery.maxSizePhone} {\n    grid-row-gap: 30px;\n    margin-bottom: 10px;\n  }\n\n  ${mediaQuery.minSizeTabletAndUp} {\n    grid-template-columns: repeat(${({ col }) => col}, 1fr);\n    grid-column-gap: 18px;\n    grid-row-gap: 10px;\n  }\n`;\n\nexport default Row;\n","import styled from \"styled-components\";\nimport { mediaQuery } from \"../../config\";\n\nconst Container = styled.div`\n  display: grid;\n  grid-auto-rows: auto;\n  grid-row-gap: 40px;\n  width: 80vw;\n\n  ${mediaQuery.smallSize} {\n    width: 94vw;\n  }\n  ${mediaQuery.mediumSize} {\n    width: 96vw;\n  }\n\n  margin-right: auto;\n  margin-left: auto;\n`;\n\nexport default Container;\n","import { createSelector } from \"reselect\";\nimport { AppState } from \"../../store\";\nimport { ICard } from \"./Card.types\";\n\nexport const getStatus = (state: AppState) => state.critera.status;\n\nexport const getBirthday = (state: AppState) => state.critera.birthday;\n\nexport const getStartDate = (state: AppState) =>\n  state.priceBase.duration.startDate;\n\nexport const getEndDate = (state: AppState) => state.priceBase.duration.endDate;\n\nexport const getPBB1 = (state: AppState) => state.priceBase.pbb1;\nexport const getPBB2 = (state: AppState) => state.priceBase.pbb2;\n\nexport const getSalaryModel = (state: AppState): string =>\n  state.salaryInfo.salaryModel || \"\";\n\nexport const getBasicSalary = (state: AppState): number =>\n  state.salaryInfo.basicSalary || 0;\n\n// Errors\nexport const getBasicSalaryError = (state: AppState) =>\n  state.errors.basicSalary;\n\nexport const getSalaryModelError = (state: AppState) =>\n  state.errors.salaryModel;\n\nexport const getPBBError = (state: AppState) => state.errors.pbb;\n\nexport const getEndDateError = (state: AppState) => state.errors.endDate;\n\nexport const getStartDateError = (state: AppState) => state.errors.startDate;\n\nexport const getBirthdayError = (state: AppState) => state.errors.birthday;\n\nexport const getStatusError = (state: AppState) => state.errors.status;\n\nexport const getCards = createSelector(\n  [getPBB1, getPBB2, getSalaryModel, getBasicSalary],\n  (PBB1, PBB2, SalaryModel, BasicSalary) => {\n    let cards = [];\n    cards[0] = generateCard(PBB1, BasicSalary, SalaryModel);\n\n    if (PBB2 > 0) {\n      cards[1] = generateCard(PBB2, BasicSalary, SalaryModel);\n    }\n\n    return cards;\n  }\n);\n\nconst generateCard = (\n  pbb: number,\n  basicSalary: number,\n  salaryModel: string\n): ICard => {\n  const yearlySalary = basicSalary * 12;\n\n  const ConvertedBasicSalary =\n    salaryModel === \"Rörlig\" ? basicSalary * 1.235 : basicSalary;\n  const max10PBB = pbb * 10;\n  const max15PBB = pbb * 15;\n  const parentalSalaryUpto10PBB =\n    yearlySalary > max10PBB\n      ? max10PBB * ((0.1 / 365) * 30)\n      : yearlySalary * ((0.1 / 365) * 30);\n  const excessFixedSalary =\n    yearlySalary > max10PBB ? Math.min(yearlySalary, max15PBB) - max10PBB : 0;\n\n  const parentalSalaryAbove10PBB = excessFixedSalary * ((0.9 / 365) * 30);\n  const monthlyTotal =\n    parentalSalaryAbove10PBB <= 0\n      ? parentalSalaryAbove10PBB\n      : parentalSalaryAbove10PBB + parentalSalaryAbove10PBB;\n\n  return {\n    ConvertedBasicSalary,\n    max10PBB,\n    max15PBB,\n    excessFixedSalary,\n    parentalSalaryUpto10PBB,\n    parentalSalaryAbove10PBB,\n    monthlyTotal\n  };\n};\n","import { connect } from \"react-redux\";\nimport { CardComponent } from \"./components\";\n\nimport { AppState } from \"../../store\";\nimport { getPBB1, getPBB2, getCards } from \"./Card.selector\";\nimport { ICard } from \"./Card.types\";\n\ntype IMapStateToProps2 = {\n  pbb1: number;\n  pbb2: number;\n  cards: ICard[];\n};\nconst mapStateToProps = (state: AppState): IMapStateToProps2 & any => ({\n  pbb1: getPBB1(state),\n  pbb2: getPBB2(state),\n  cards: getCards(state)\n});\n\nexport default connect(mapStateToProps, null)(CardComponent);\n","import React from \"react\";\n\nimport { Spinner, Error } from \"../../../common/ui\";\nimport StyledCard from \"../style\";\nimport { ICard, IMapCardStateToProps } from \"../Card.types\";\nimport { Row } from \"../../../utilities/styles/layout\";\n\nexport const CardComponent: React.FC<IMapCardStateToProps & any> = ({\n  cards,\n  ...props\n}) => {\n  const error: boolean = false;\n  const loading: boolean = false;\n\n  if (loading) return <Spinner size={5} />;\n  if (error && !loading) return <Error errors={{ t: \"hghh\", jj: \"Test\" }} bg />;\n\n  return (\n    <Row col={cards.length === 2 ? 2 : 1}>\n      {cards.map((cardData: ICard, index: number) => (\n        <StyledCard key={index}>\n          <StyledCard.Body>\n            <StyledCard.ListItem>\n              <span>Max 10 PBB 10%:</span>\n              <span>{cardData.max10PBB}</span>\n            </StyledCard.ListItem>\n\n            <StyledCard.ListItem>\n              <span>Max 15 PBB 90%:</span>\n              <span>{cardData.max15PBB}</span>\n            </StyledCard.ListItem>\n\n            <StyledCard.ListItem>\n              <span>Överskjutande fast lön:</span>\n              <span>{cardData.excessFixedSalary}</span>\n            </StyledCard.ListItem>\n\n            <StyledCard.ListItem>\n              <span>Föräldralön upp till 10 PBB:</span>\n              <span>{cardData.parentalSalaryUpto10PBB}</span>\n            </StyledCard.ListItem>\n\n            <StyledCard.ListItem>\n              <span>Föräldralön över 10 PBB:</span>\n              <span>{cardData.parentalSalaryAbove10PBB}</span>\n            </StyledCard.ListItem>\n          </StyledCard.Body>\n\n          <StyledCard.Footer>\n            <span>Total föräldralön/mån:</span>\n            <span>{cardData.monthlyTotal} kr</span>\n          </StyledCard.Footer>\n        </StyledCard>\n      ))}\n    </Row>\n  );\n};\n","import { Action } from \"redux\";\nimport moment from \"moment\";\n\nexport const SET_STATUS = \"[CRITERIAS] SET_STATUS\";\nexport const SET_BIRTHDAY = \"[CRITERIAS] SET_BIRTHDAY\";\nexport const SET_STATUS_ERROR = \"[CRITERIAS] SET_STATUS_ERROR\";\nexport const SET_BIRTHDAY_ERROR = \"[CRITERIAS] SET_BIRTHDAY_ERROR\";\n\nexport interface CriteriaState {\n  readonly birthday?: null | string;\n  readonly status?: string;\n  readonly errors: {\n    readonly birthday?: string;\n    readonly status?: string;\n  };\n}\n\nexport interface DatePickerProps {\n  readonly birthday: moment.Moment | null;\n  readonly changeDateHandler: (date: moment.Moment | null) => void;\n  readonly error: string;\n}\n\nexport interface EmployeeStatusProps {\n  readonly changeSalaryHandler: (\n    e: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  readonly error: string;\n}\n\nexport type IMapStateToProps = {\n  birthday?: string | null;\n  statusError?: string;\n  birthdayError?: string;\n};\n\nexport type IMapDispatchProps = {\n  changeSalaryHandler: (status: string) => void;\n  changeDateHandler: (date: string) => void;\n};\n\ninterface setSalaryModelAction extends Action {\n  readonly type: typeof SET_STATUS;\n  readonly status: string;\n  readonly error: string;\n}\n\ninterface setChildBirthdayAction extends Action {\n  readonly type: typeof SET_BIRTHDAY;\n  readonly birthday: string | null;\n  readonly error: string;\n}\n\nexport type CriteriaActionTypes = setChildBirthdayAction | setSalaryModelAction;\n","import {\n  CriteriaState,\n  SET_STATUS,\n  CriteriaActionTypes,\n  SET_BIRTHDAY\n} from \"./Criterias.types\";\n\nconst initialState: CriteriaState = {\n  birthday: null,\n  status: \"\",\n  errors: {}\n};\n\nexport default (\n  state = initialState,\n  action: CriteriaActionTypes\n): CriteriaState => {\n  switch (action.type) {\n    case SET_BIRTHDAY:\n      return {\n        ...state,\n        birthday: action.birthday,\n        errors: { ...state.errors, birthday: action.error }\n      };\n\n    case SET_STATUS:\n      return {\n        ...state,\n        status: action.status,\n        errors: { ...state.errors, status: action.error }\n      };\n\n    default:\n      return state;\n  }\n};\n","import React, { useState } from \"react\";\nimport moment from \"moment\";\nimport { SingleDatePicker } from \"react-dates\";\n\nimport { Label, Error } from \"../../../common/ui\";\nimport { hintMessages } from \"../../../utilities/config/messages.config\";\nimport { DatePickerProps } from \"../Criterias.types\";\n\nconst DatePickerComponent: React.FC<DatePickerProps> = ({\n  error,\n  birthday,\n  changeDateHandler,\n  ...props\n}) => {\n  const [focused, setFocused] = useState(false);\n\n  return (\n    <div>\n      <Label\n        htmlFor=\"child-birthday\"\n        hintText={hintMessages.period}\n        labelText=\"Födelse av ditt barn\"\n      />\n      <SingleDatePicker\n        date={birthday} // momentPropTypes.momentObj or null\n        onDateChange={changeDateHandler} // PropTypes.func.isRequired\n        focused={focused} // PropTypes.bool\n        onFocusChange={() => setFocused(!focused)} // PropTypes.func.isRequired\n        id=\"child-birthday\" // PropTypes.string.isRequired,\n        placeholder=\"Datum\"\n        displayFormat=\"YYYY-MM-DD\"\n        hideKeyboardShortcutsPanel={true}\n        showDefaultInputIcon\n        showClearDate\n        numberOfMonths={1}\n        isOutsideRange={day =>\n          day.isAfter(moment()) || day.isBefore(moment().subtract(2, \"years\"))\n        }\n      />\n      {error && <Error error={error} />}\n    </div>\n  );\n};\n\nexport default DatePickerComponent;\n","import React from \"react\";\nimport { SelectBox } from \"../../../common/ui\";\n\nimport { EmployeeStatusProps } from \"../Criterias.types\";\nimport {\n  employeeStatus,\n  hintMessages\n} from \"../../../utilities/config/messages.config\";\n\nconst EmployeeStatusComponent: React.FC<EmployeeStatusProps & {\n  error: string;\n}> = ({ changeSalaryHandler, ...props }) => {\n  return (\n    <SelectBox\n      name=\"salary-type\"\n      options={employeeStatus}\n      labelText=\"Jag är en sammanhängande anställning på Dynabyte i\"\n      hintText={hintMessages.employeeStatus}\n      onChange={changeSalaryHandler}\n      error={props.error}\n    />\n  );\n};\n\nexport default EmployeeStatusComponent;\n","import { AppState } from \"../../store\";\n\nexport const getBirthday = (state: AppState) => state.critera.birthday;\nexport const getStatus = (state: AppState) => state.critera.status;\nexport const getStatusError = (state: AppState) => state.critera.errors.status;\nexport const getBirthdayError = (state: AppState) =>\n  state.critera.errors.birthday;\n","import React from \"react\";\nimport { connect } from \"react-redux\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { EmployeeStatusComponent, DatePickerComponent } from \"./components\";\n\nimport { AppState } from \"../../store\";\nimport {\n  getBirthday,\n  getStatusError,\n  getBirthdayError\n} from \"./Criterias.Selector\";\nimport { setStatus, setBirtDate } from \"./Criterias.action\";\n\nimport { Row } from \"../../utilities/styles/layout\";\n\nimport {\n  EmployeeStatusProps,\n  DatePickerProps,\n  CriteriaActionTypes,\n  IMapStateToProps,\n  IMapDispatchProps\n} from \"./Criterias.types\";\n\ntype IProps = EmployeeStatusProps &\n  DatePickerProps &\n  IMapStateToProps &\n  IMapDispatchProps &\n  any;\n\nconst Criteria: React.FC<IProps> = props => {\n  return (\n    <>\n      <Row col={2}>\n        <EmployeeStatusComponent\n          error={props.statusError}\n          changeSalaryHandler={e => props.changeSalaryHandler(e.target.value)}\n        />\n        <DatePickerComponent\n          changeDateHandler={props.changeDateHandler}\n          birthday={props.birthday}\n          error={props.birthdayError}\n        />\n      </Row>\n    </>\n  );\n};\n\nconst mapStateToProps = (state: AppState): IMapStateToProps => ({\n  birthday: getBirthday(state),\n  statusError: getStatusError(state),\n  birthdayError: getBirthdayError(state)\n});\n\nconst mapStateToDispatch = (\n  dispatch: ThunkDispatch<AppState, any, CriteriaActionTypes>\n): IMapDispatchProps => ({\n  changeSalaryHandler: (status: string) => dispatch(setStatus(status)),\n  changeDateHandler: (date: string) => dispatch(setBirtDate(date))\n});\n\nexport default connect(mapStateToProps, mapStateToDispatch)(Criteria);\n","import { ThunkDispatch } from \"redux-thunk\";\nimport { ThunkActionType } from \"../../store\";\nimport {\n  SET_BIRTHDAY,\n  SET_STATUS,\n  CriteriaActionTypes,\n  CriteriaState\n} from \"./Criterias.types\";\nimport { errorMessages } from \"../../utilities/config/messages.config\";\n\nexport const setBirtDate = (birthday: string | null): ThunkActionType => (\n  dispatch: ThunkDispatch<CriteriaState, any, CriteriaActionTypes>\n): void => {\n  dispatch({\n    type: SET_BIRTHDAY,\n    birthday,\n    error: birthday === null ? errorMessages.birthdayIsRequired : \"\"\n  });\n};\n\nexport const setStatus = (status: string): ThunkActionType => (\n  dispatch: ThunkDispatch<CriteriaState, any, CriteriaActionTypes>\n): void => {\n  dispatch({\n    type: SET_STATUS,\n    status,\n    error: status === \"\" ? errorMessages.statusIsRequired : \"\"\n  });\n};\n","import { Action } from \"redux\";\n\nexport const SET_PBB1 = \"[PRICE_BASE] SET_PBB1\";\nexport const SET_PBB2 = \"[PRICE_BASE] SET_PBB2\";\nexport const SET_START_DATE = \"[PRICE_BASE] SET_START_DATE\";\nexport const SET_END_DATE = \"[PRICE_BASE] SET_END_DATE\";\n\nexport type IDuration = {\n  readonly startDate?: null | string;\n  readonly endDate?: null | string;\n  readonly countOfDays?: undefined | number;\n};\n\nexport interface IPriceBase {\n  readonly pbb1: number;\n  readonly pbb2: number;\n  readonly duration: IDuration;\n  readonly errors: {\n    readonly pbb1: string;\n    readonly pbb2: string;\n    readonly startDate?: string;\n    readonly endDate?: string;\n  };\n}\n\ninterface setPBB1Action extends Action {\n  type: typeof SET_PBB1;\n  pbb1: number;\n  error: string;\n}\n\ninterface setPBB2Action extends Action {\n  type: typeof SET_PBB2;\n  pbb2: number;\n  error: string;\n}\n\ninterface setStartDateAction extends Action {\n  type: typeof SET_START_DATE;\n  startDate?: null | string;\n  error: string;\n}\n\ninterface setEndDateAction extends Action {\n  type: typeof SET_END_DATE;\n  endDate?: null | string;\n  error: string;\n}\n\nexport type PriceBaseActionTypes =\n  | setStartDateAction\n  | setEndDateAction\n  | setPBB1Action\n  | setPBB2Action;\n","export const PBB: any = {\n  \"2020\": 47300,\n  \"2019\": 46500,\n  \"2018\": 45500,\n  \"2017\": 44800\n};\n","import moment from \"moment\";\n\nimport { ThunkActionType, ThunkDispatchType, AppState } from \"../../store\";\nimport {\n  SET_PBB1,\n  SET_PBB2,\n  SET_START_DATE,\n  SET_END_DATE,\n  PriceBaseActionTypes\n} from \"./PriceBase.types\";\nimport { PBB } from \"../../constants/pbb\";\nimport { errorMessages } from \"../../utilities/config/messages.config\";\n\nexport const setPBB1 = (pbb1: number): ThunkActionType => (\n  dispatch: ThunkDispatchType\n): void => {\n  dispatch({\n    type: SET_PBB1,\n    pbb1,\n    error: !pbb1 ? errorMessages.notFoundPBB : \"\"\n  });\n};\n\nexport const setPBB2 = (pbb2: number): ThunkActionType => (\n  dispatch: ThunkDispatchType\n): void => {\n  dispatch({\n    type: SET_PBB2,\n    pbb2,\n    error: !pbb2 ? errorMessages.notFoundPBB : \"\"\n  });\n};\n\nconst setStartDate = (startDate: string): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n): void => {\n  let birthday: any = getState().critera.birthday;\n  let error = moment(startDate).isBetween(\n    moment(birthday),\n    moment(birthday)\n      .add(2, \"years\")\n      .subtract(29, \"days\") &&\n      birthday &&\n      startDate\n  )\n    ? errorMessages.period\n    : \"\";\n\n  dispatch({\n    type: SET_START_DATE,\n    startDate,\n    error\n  });\n};\n\nconst setEndDate = (endDate: string): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n): void => {\n  let startDate: any = getState().priceBase.duration.startDate;\n\n  dispatch({\n    type: SET_END_DATE,\n    endDate,\n    error:\n      moment(endDate).diff(startDate, \"days\") <= 29\n        ? errorMessages.minPeriod\n        : \"\"\n  });\n};\n\nexport const setDuration = (\n  startDate: string,\n  endDate: string\n): ThunkActionType => (dispatch: ThunkDispatchType): void => {\n  const firstYear: number = moment(startDate).year();\n  const secondYear: number = moment(endDate).year();\n  const sameYear: boolean = moment(startDate).isSame(endDate, \"year\");\n\n  if (!startDate && !endDate) {\n    dispatch(setPBB2(0));\n    dispatch(setEndDate(endDate));\n  }\n\n  if (!endDate) {\n    dispatch(setStartDate(startDate));\n  }\n\n  if (endDate) {\n    dispatch(setEndDate(endDate));\n    if (!isNaN(firstYear)) {\n      dispatch(setPBB1(PBB[firstYear]));\n    }\n\n    if (!sameYear && !isNaN(firstYear) && !isNaN(secondYear)) {\n      dispatch(setPBB2(PBB[secondYear]));\n    }\n  }\n};\n","import moment from \"moment\";\nimport {\n  PriceBaseActionTypes,\n  SET_PBB1,\n  SET_PBB2,\n  IPriceBase,\n  SET_START_DATE,\n  SET_END_DATE\n} from \"./PriceBase.types\";\nimport { PBB } from \"../../constants\";\n\nconst initialState: IPriceBase = {\n  pbb1: PBB[moment().year()],\n  pbb2: 0,\n  duration: {\n    startDate: null,\n    endDate: null,\n    countOfDays: undefined\n  },\n  errors: {\n    startDate: \"\",\n    endDate: \"\",\n    pbb1: \"\",\n    pbb2: \"\"\n  }\n};\n\nexport default (\n  state = initialState,\n  action: PriceBaseActionTypes\n): IPriceBase => {\n  switch (action.type) {\n    case SET_PBB1:\n      return {\n        ...state,\n        pbb1: action.pbb1,\n        //pbb2: 0,\n        errors: { ...state.errors, pbb1: action.error }\n      };\n\n    case SET_PBB2:\n      return {\n        ...state,\n        pbb2: action.pbb2,\n        errors: { ...state.errors, pbb2: action.error }\n      };\n\n    case SET_START_DATE:\n      return {\n        ...state,\n        duration: {\n          ...state.duration,\n          startDate: action.startDate\n        },\n        errors: {\n          ...state.errors,\n          startDate: action.error\n        }\n      };\n    case SET_END_DATE:\n      return {\n        ...state,\n        duration: {\n          ...state.duration,\n          endDate: action.endDate\n        },\n        errors: {\n          ...state.errors,\n          endDate: action.error\n        }\n      };\n    default:\n      return state;\n  }\n};\n","import * as React from \"react\";\nimport { DateRangePicker } from \"react-dates\";\nimport moment from \"moment\";\nimport { Label, Error } from \"../../../common/ui\";\nimport { hintMessages } from \"../../../utilities/config/messages.config\";\n\nexport interface IDurationProps {}\n\ninterface IDurationState {\n  startDate?: null | string;\n  endDate?: null | string;\n  focusedInput?: boolean;\n}\n\nclass Duration extends React.Component<any, any> {\n  state = {\n    focusedInput: null\n  };\n\n  public render() {\n    const {\n      birthday,\n      startDate,\n      endDate,\n      countOfDays,\n      onDatesChange,\n      error\n    } = this.props;\n\n    return (\n      <div>\n        <Label\n          htmlFor=\"startDate\"\n          labelText=\"Datum\"\n          hintText={hintMessages.minPeriod}\n        />\n\n        <DateRangePicker\n          startDate={startDate} // momentPropTypes.momentObj or null,\n          startDateId=\"startDate\" // PropTypes.string.isRequired,\n          endDate={endDate} // momentPropTypes.momentObj or null,\n          endDateId=\"endDate\" // PropTypes.string.isRequired,\n          onDatesChange={({ startDate, endDate }) =>\n            onDatesChange(startDate, endDate)\n          }\n          focusedInput={this.state.focusedInput}\n          onFocusChange={focusedInput => this.setState({ focusedInput })}\n          //numberOfMonths={1}\n          isOutsideRange={day =>\n            day.isBefore(moment(birthday)) ||\n            day.isAfter(moment(birthday).add(2, \"years\"))\n          }\n          showDefaultInputIcon\n          displayFormat=\"YYYY-MM-DD\"\n          startDatePlaceholderText=\"Start Datum\"\n          endDatePlaceholderText=\"Slut Datum\"\n          //onClose={onClose}\n          hideKeyboardShortcutsPanel={true}\n          showClearDates\n          reopenPickerOnClearDates\n          numberOfMonths={window.innerWidth >= 768 ? 2 : 1}\n          //regular\n          //block\n        />\n        {error.startDate && <Error error={error.startDate} />}\n        {error.endDate && <Error error={error.endDate} />}\n        {countOfDays && !error && (\n          <Label\n            labelText={\n              countOfDays === 1 ? countOfDays + \" Dag\" : countOfDays + \" Dagar\"\n            }\n          />\n        )}\n      </div>\n    );\n  }\n}\n\nexport default Duration;\n","import React, { useState } from \"react\";\nimport TextBox from \"../../../common/ui/textbox\";\n\nimport {\n  hintMessages,\n  errorMessages\n} from \"../../../utilities/config/messages.config\";\n\ninterface Props {\n  year?: string;\n}\n\nconst BasicAmount: React.FC<Props & any> = props => {\n  const [toggleState, setToggleState] = useState(false);\n  const { year, value, onChange, error } = props;\n  return (\n    <TextBox\n      disabled={!toggleState}\n      labelText={`Basbelopp för ${year}`}\n      name={`basic-amount-${year}`}\n      value={value}\n      onChange={e => onChange(e.target.value)}\n      hintText={hintMessages.changePBB}\n      toggleName={`basic-amount-${year}`}\n      toggleState={toggleState}\n      handleToggle={() => setToggleState(!toggleState)}\n      error={error && `${error} ${year}`}\n    />\n  );\n};\n\nexport default BasicAmount;\n","import { AppState } from \"../../store\";\nimport moment from \"moment\";\n\nexport const getPriceBaseErrors = (state: AppState) => state.priceBase.errors;\n\nexport const getYears = (state: AppState) => {\n  let { startDate = moment().year(), endDate }: any = state.priceBase.duration;\n\n  const firstYear: null | number = moment(startDate).year() || moment().year();\n  const secondYear: null | number = moment(endDate).year();\n  const sameYear: boolean = moment(startDate).isSame(endDate, \"year\");\n\n  let years = [firstYear];\n  if (!sameYear && secondYear) {\n    years[1] = secondYear;\n  }\n  return years;\n};\n\nexport const getCountOfDays = (state: AppState) => {\n  let { startDate, endDate }: any = state.priceBase.duration;\n  return startDate && endDate && endDate.diff(startDate, \"days\");\n};\n","import React from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { connect } from \"react-redux\";\n\nimport { Row } from \"../../utilities/styles/layout\";\nimport { AppState } from \"../../store\";\nimport { Duration, BasicAmount } from \"./components\";\nimport { setPBB1, setPBB2, setDuration } from \"./PriceBase.action\";\nimport {\n  getYears,\n  getPriceBaseErrors,\n  getCountOfDays\n} from \"./PriceBase.selector\";\n\ninterface Props {}\n\nconst PriceBase: React.FC<any> = (props: any) => {\n  const {\n    startDate,\n    endDate,\n    onDatesChange,\n    countOfDays,\n    pbb1,\n    pbb2,\n    onPBB1ChangeHandler,\n    onPBB2ChangeHandler,\n    years,\n    errors\n  } = props;\n  return (\n    <Row col={2}>\n      <Duration\n        startDate={startDate}\n        endDate={endDate}\n        countOfDays={countOfDays}\n        onDatesChange={onDatesChange}\n        error={{\n          startDate: errors.startDate,\n          endDate: errors.endDate\n        }}\n      />\n\n      <Row col={years.length === 2 && years[1] ? 2 : 1}>\n        <BasicAmount\n          year={years[0]}\n          value={pbb1}\n          error={errors.pbb1}\n          onChange={onPBB1ChangeHandler}\n        />\n        {years.length === 2 && years[1] && (\n          <BasicAmount\n            year={years[1]}\n            value={pbb2}\n            error={errors.pbb2}\n            onChange={onPBB2ChangeHandler}\n          />\n        )}\n      </Row>\n    </Row>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  startDate: state.priceBase.duration.startDate,\n  endDate: state.priceBase.duration.endDate,\n  years: getYears(state),\n  pbb1: state.priceBase.pbb1,\n  pbb2: state.priceBase.pbb2,\n  countOfDays: getCountOfDays(state),\n  errors: getPriceBaseErrors(state)\n});\n\nconst mapStateToDispatch = (dispatch: ThunkDispatch<AppState, any, any>) => ({\n  onPBB1ChangeHandler: (pbb1: number) => dispatch(setPBB1(pbb1)),\n  onPBB2ChangeHandler: (pbb2: number) => dispatch(setPBB2(pbb2)),\n  onDatesChange: (strD: string, endD: string) => {\n    dispatch(setDuration(strD, endD));\n  }\n});\n\nexport default connect(mapStateToProps, mapStateToDispatch)(PriceBase);\n","import {\n  SalaryInfoActionTypes,\n  SET_SALARY_MODEL,\n  SET_BASIC_SALARY,\n  ISalaryInfo\n} from \"./SalaryInfo.types\";\n\nconst initialState: ISalaryInfo = {\n  basicSalary: 30000,\n  salaryModel: \"\"\n};\n\nexport default (\n  state = initialState,\n  action: SalaryInfoActionTypes\n): ISalaryInfo => {\n  switch (action.type) {\n    case SET_BASIC_SALARY:\n      return { ...state, basicSalary: action.basicSalary };\n    case SET_SALARY_MODEL:\n      return { ...state, salaryModel: action.salaryModel };\n    default:\n      return state;\n  }\n};\n","import React from \"react\";\nimport { ThunkDispatch } from \"redux-thunk\";\nimport { connect } from \"react-redux\";\nimport Slider from \"react-input-slider\";\n\nimport { SelectBox, TextBox } from \"../../../common/ui\";\n\nimport { Row } from \"../../../utilities/styles/layout\";\nimport { colors, styling } from \"../../../utilities/config\";\nimport {\n  salaryModels,\n  hintMessages\n} from \"../../../utilities/config/messages.config\";\nimport { AppState, AppActions } from \"../../../store\";\nimport { setBasicSalary, setSalaryModel } from \"../SalaryInfo.action\";\nimport { ISalaryInfo } from \"../SalaryInfo.types\";\n\nconst BasicSalaryComponent: React.FC<ISalaryInfo & any> = props => {\n  const {\n    basiceSalaryValue,\n    basiceSalaryChangeHandler,\n    setSalaryModelChangeHandler\n  } = props;\n  return (\n    <>\n      <Row col={2}>\n        <SelectBox\n          name=\"salary-type\"\n          options={salaryModels}\n          labelText=\"Lönemodell\"\n          onChange={e => setSalaryModelChangeHandler(e.target.value)}\n        />\n\n        <TextBox\n          labelText=\"Grundlön\"\n          name=\"baseSalary\"\n          value={basiceSalaryValue}\n          onChange={e => basiceSalaryChangeHandler(e.target.value)}\n          hintText={hintMessages.minSalary}\n          error=\"\"\n        />\n      </Row>\n      <Slider\n        axis=\"x\"\n        xstep={50}\n        xmin={0}\n        xmax={100000}\n        x={parseInt(basiceSalaryValue)}\n        onChange={({ x }) => basiceSalaryChangeHandler(x.toString())}\n        styles={{\n          track: {\n            width: \"100%\",\n            backgroundColor: `${colors.darkGray}`,\n            height: 15,\n            borderRadius: 10,\n            boxShadow: `${styling.borderShadow(0.15, \"inset\")}`\n          },\n          active: {\n            backgroundColor: `${colors.primary}`,\n            borderRadius: 10\n          },\n          thumb: {\n            cursor: \"pointer\",\n            width: 30,\n            height: 30\n          },\n          disabled: {\n            opacity: 0.5\n          }\n        }}\n      />\n    </>\n  );\n};\n\nconst mapStateToProps = (state: AppState) => ({\n  basiceSalaryValue: state.salaryInfo.basicSalary,\n  salaryModels: state.salaryInfo.salaryModel\n});\n\nconst mapStateToDispatch = (\n  dispatch: ThunkDispatch<AppState, any, AppActions>\n) => ({\n  basiceSalaryChangeHandler: (salary: number) =>\n    dispatch(setBasicSalary(salary)),\n  setSalaryModelChangeHandler: (salaryModel: string) =>\n    dispatch(setSalaryModel(salaryModel))\n});\n\nexport default connect(\n  mapStateToProps,\n  mapStateToDispatch\n)(BasicSalaryComponent);\n","import {\n  SET_BASIC_SALARY,\n  SET_SALARY_MODEL,\n  SalaryInfoActionTypes\n} from \"./SalaryInfo.types\";\nimport { AppState, ThunkActionType, ThunkDispatchType } from \"../../store\";\n\nexport const setBasicSalary = (basicSalary: number): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n): SalaryInfoActionTypes => {\n  return dispatch({\n    type: SET_BASIC_SALARY,\n    basicSalary\n  });\n};\n\nexport const setSalaryModel = (salaryModel: string): ThunkActionType => (\n  dispatch: ThunkDispatchType,\n  getState: () => AppState\n): SalaryInfoActionTypes => {\n  return dispatch({\n    type: SET_SALARY_MODEL,\n    salaryModel\n  });\n};\n","import { Action } from \"redux\";\n\nexport const SET_BASIC_SALARY = \"[SALARY_INFO] SET_BASIC_SALARY\";\nexport const SET_SALARY_MODEL = \"[SALARY_INFO] SET_SALARY_MODEL\";\n\nexport interface ISalaryInfo {\n  salaryModel?: string;\n  basicSalary?: number;\n}\n\ninterface setBasicSalaryAction extends Action {\n  type: typeof SET_BASIC_SALARY;\n  basicSalary: number;\n}\n\ninterface setSalaryModelAction extends Action {\n  type: typeof SET_SALARY_MODEL;\n  salaryModel: string;\n}\n\nexport type SalaryInfoActionTypes = setBasicSalaryAction | setSalaryModelAction;\n","import { createGlobalStyle } from \"styled-components\";\nimport { styling, colors } from \"../config\";\nimport { normalize } from \"polished\";\n\nconst GlobalStyle = createGlobalStyle`\n${normalize()}\n\nhtml {\n  box-sizing: border-box;\n}\n\n\n*,*:before, *:after{\n  box-sizing: inherit;\n  font-family: ${styling.typography.fontFamily}\n}\n\nbody {\n  background:  ${colors.lightGray};\n}\n\nh1, h2, h3, p {\n  margin: 0;\n  padding: 0;\n}\n\n::selection{\n  background: ${colors.primary};\n  color: ${colors.white}\n}\n\ninput, select{\n  font-weight: 400  !important;\n  font-size: 19px;\n}\n\n\n.CalendarDay__selected,\n.CalendarDay__selected:active,\n.CalendarDay__selected:hover {\n  background: ${colors.primary} !important;\n  border: 1px solid ${colors.secondary} !important;\n}\n\n.CalendarDay__selected_span, .CalendarDay__hovered_span {\n  background: ${colors.secondary} !important;\n  border: 1px solid ${colors.white} !important;\n  color: ${colors.white} !important;\n}\n\n.DateInput_input__focused {\n  border-bottom: 2px solid ${colors.primary} !important;\n}\n\n.DateRangePickerInput, .DateRangePicker,.SingleDatePicker ,.SingleDatePickerInput{\n  width: 100% !important;\n  box-shadow: ${styling.borderShadow()};\n  height:60px;\n\n  .DateInput_input{\n    text-align: center  !important;\n    font-weight: 400  !important;\n    height: 58px;\n  }\n}\n\n.SingleDatePicker {\n  .SingleDatePickerInput{\n      display: flex;\n      \n    .DateInput{  \n      flex: 1;\n      \n    }\n  }\n}\n\n.DateRangePicker{\n  margin-bottom: 10px;\n\n  & + div{\n    /*position:absolute;*/\n    width: 100%;\n    text-align: center;\n    font-size: ${styling.typography.fontMedSize};\n  }\n}\n\n.DateRangePicker{\n  .DateRangePickerInput{\n    display: flex;\n    align-items: center;\n\n    .DateInput{\n      flex: 1;\n    }\n  }\n} \n`;\n\nexport default GlobalStyle;\n","import styled from \"styled-components\";\n\ntype IProps = {\n  mt?: null | number;\n};\n\nexport const Title = styled.h3<IProps>`\n  ${({ mt = null }) => (mt ? `margin-top: ${mt}px` : \"\")}\n`;\n","import moment from \"moment\";\n\nexport default () =>\n  moment.updateLocale(\"sv\", {\n    months: [\n      \"Januari\",\n      \"Februari\",\n      \"Mars\",\n      \"April\",\n      \"Maj\",\n      \"Juni\",\n      \"Juli\",\n      \"Augusti\",\n      \"September\",\n      \"Oktober\",\n      \"November\",\n      \"December\"\n    ],\n    monthsShort: [\n      \"Jan\",\n      \"Feb\",\n      \"Mar\",\n      \"Apr\",\n      \"Maj\",\n      \"Jun\",\n      \"Jul\",\n      \"Aug\",\n      \"Sep\",\n      \"Okt\",\n      \"Nov\",\n      \"Dec\"\n    ],\n    weekdays: [\n      \"Måndag\",\n      \"Tisdag\",\n      \"Onsdag\",\n      \"Torsdag\",\n      \"Fredag\",\n      \"Lördag\",\n      \"Söndag\"\n    ],\n    weekdaysMin: [\"Mån\", \"Tis\", \"Ons\", \"Tor\", \"Fre\", \"Lör\", \"Sön\"]\n  });\n","import React from \"react\";\nimport \"react-dates/initialize\";\n\nimport { PriceBase } from \"../price-base\";\nimport BasicSalary from \"../salary-info/components/SalaryInfo.component\";\nimport { Criteria } from \"../criterias\";\nimport { Card } from \"../card\";\n\nimport { localDateConfig } from \"../../utilities/config\";\n\nimport { Container } from \"../../utilities/styles/layout\";\nimport GlobalStyles from \"../../utilities/styles/GlobalStyle\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { Title } from \"./style\";\n\n/*  moment.locale(\"sv\");*/\nlocalDateConfig();\n\nconst AppComponent: React.FC = () => {\n  return (\n    <Container>\n      <GlobalStyles />\n\n      <Title mt={30}>Vad behöver jag tänka på?</Title>\n      <Criteria />\n\n      <Title>Prisbasbeloppet</Title>\n      <PriceBase />\n\n      <BasicSalary />\n\n      <Card />\n    </Container>\n  );\n};\n\nexport default AppComponent;\n","import {\n  STATUS_HAS_ERROR,\n  BIRTHDAY_HAS_ERROR,\n  START_DATE_HAS_ERROR,\n  PBB_HAS_ERROR,\n  END_DATE_HAS_ERROR,\n  SALARY_MODEL_HAS_ERROR,\n  SALARY_HAS_ERROR,\n  ErrorState,\n  ErrorActionTypes\n} from \"./types\";\n\nconst initialState: ErrorState = {\n  status: undefined,\n  birthday: undefined,\n  startDate: undefined,\n  endDate: undefined,\n  pbb: undefined,\n  countOfDays: undefined,\n  salaryModel: undefined,\n  basicSalary: undefined\n};\n\nexport default (state = initialState, action: ErrorActionTypes): ErrorState => {\n  switch (action.type) {\n    case STATUS_HAS_ERROR:\n      return { ...state, status: action.payload };\n    case BIRTHDAY_HAS_ERROR:\n      return { ...state, birthday: action.payload };\n    case START_DATE_HAS_ERROR:\n      return { ...state, startDate: action.payload };\n    case END_DATE_HAS_ERROR:\n      return { ...state, endDate: action.payload };\n    case PBB_HAS_ERROR:\n      return { ...state, pbb: action.payload };\n    case SALARY_MODEL_HAS_ERROR:\n      return { ...state, salaryModel: action.payload };\n    case SALARY_HAS_ERROR:\n      return { ...state, birthday: action.payload };\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport { ErrorReducer } from \"./middlewares/error\";\nimport {\n  CardReducer,\n  CriteriaReducer,\n  SalaryInfoReducer,\n  PriceBaseReducer\n} from \"../features\";\n\nexport default combineReducers({\n  critera: CriteriaReducer,\n  priceBase: PriceBaseReducer,\n  salaryInfo: SalaryInfoReducer,\n  cards: CardReducer,\n  errors: ErrorReducer\n});\n","import { Action } from \"redux\";\n\nexport interface ICard {\n  ConvertedBasicSalary: number;\n  max10PBB: number;\n  max15PBB: number;\n  excessFixedSalary: number;\n  parentalSalaryUpto10PBB: any;\n  parentalSalaryAbove10PBB: number;\n  monthlyTotal: number;\n}\n\nexport interface IMapCardStateToProps {\n  pbb1: number;\n  pbb2: number;\n  cards: ICard[];\n}\n\nexport interface CardState {\n  loaded: boolean;\n  data: ICard[];\n}\n\n// Describing the different ACTION NAMES available\nexport const LOAD_CARD = \"LOAD_CARD\";\nexport const LOAD_CARD_SECCUSS = \"LOAD_CARD_SECCUSS\";\nexport const LOAD_CARD_FAILURE = \"LOAD_CARD_FIALURE\";\n\ninterface loadCardAction extends Action {\n  type: typeof LOAD_CARD;\n}\ninterface loadCardSeccussAction extends Action {\n  type: typeof LOAD_CARD_SECCUSS;\n  payload: ICard;\n}\ninterface loadCardFailureAction extends Action {\n  type: typeof LOAD_CARD_FAILURE;\n  payload: string;\n}\n\nexport type CardActionTypes =\n  | loadCardAction\n  | loadCardSeccussAction\n  | loadCardFailureAction;\n","import { Action } from \"redux\";\n\nexport const STATUS_HAS_ERROR = \"STATUS_HAS_ERROR\";\nexport const BIRTHDAY_HAS_ERROR = \"BIRTHDAY_HAS_ERROR\";\nexport const START_DATE_HAS_ERROR = \"START_DATE_HAS_ERROR\";\nexport const END_DATE_HAS_ERROR = \"END_DATE_HAS_ERROR\";\nexport const PBB_HAS_ERROR = \"PBB_HAS_ERROR\";\nexport const SALARY_MODEL_HAS_ERROR = \"SALARY_MODEL_HAS_ERROR\";\nexport const SALARY_HAS_ERROR = \"SALARY_HAS_ERROR\";\n\nexport interface ErrorState {\n  status?: string;\n  birthday?: string;\n  startDate?: string;\n  endDate?: string;\n  pbb?: string;\n  countOfDays?: string;\n  salaryModel?: string;\n  basicSalary?: string;\n}\n\ninterface setStatusErrorAction extends Action {\n  type: typeof STATUS_HAS_ERROR;\n  payload: string;\n}\n\ninterface setBirthdayErrorAction extends Action {\n  type: typeof BIRTHDAY_HAS_ERROR;\n  payload: string;\n}\n\ninterface setStartDateErrorAction extends Action {\n  type: typeof START_DATE_HAS_ERROR;\n  payload: string;\n}\n\ninterface setEndDateErrorAction extends Action {\n  type: typeof END_DATE_HAS_ERROR;\n  payload: string;\n}\n\ninterface setPBBErrorAction extends Action {\n  type: typeof PBB_HAS_ERROR;\n  payload: string;\n}\n\ninterface setSalaryModelErrorAction extends Action {\n  type: typeof SALARY_MODEL_HAS_ERROR;\n  payload: string;\n}\n\ninterface setSalaryErrorAction extends Action {\n  type: typeof SALARY_HAS_ERROR;\n  payload: string;\n}\n\nexport type ErrorActionTypes =\n  | setStatusErrorAction\n  | setBirthdayErrorAction\n  | setStartDateErrorAction\n  | setEndDateErrorAction\n  | setPBBErrorAction\n  | setSalaryModelErrorAction\n  | setSalaryErrorAction;\n","import { createStore, applyMiddleware, Store } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension/developmentOnly\";\nimport thunk, {\n  ThunkMiddleware,\n  ThunkAction,\n  ThunkDispatch\n} from \"redux-thunk\";\nimport { ErrorActionTypes, errorMiddleWare } from \"./middlewares\";\n\nimport rootReducers from \"./rootReducers\";\nimport {\n  SalaryInfoActionTypes,\n  CriteriaActionTypes,\n  PriceBaseActionTypes,\n  CardActionTypes\n} from \"../features\";\n\nconst middlewares = [\n  thunk as ThunkMiddleware<AppState, AppActions>,\n  errorMiddleWare as ThunkMiddleware<AppState, AppActions>\n];\nconst middleWareEnhancer = applyMiddleware(...middlewares);\n\nexport type ThunkActionType = ThunkAction<void, AppState, null, AppActions>;\nexport type ThunkDispatchType = ThunkDispatch<AppState, any, AppActions>;\n\nexport type AppState = ReturnType<typeof rootReducers>;\n\nexport type AppActions =\n  | CriteriaActionTypes\n  | PriceBaseActionTypes\n  | SalaryInfoActionTypes\n  | CardActionTypes\n  | ErrorActionTypes;\n\nexport const store: Store<AppState> = createStore(\n  rootReducers,\n  composeWithDevTools(middleWareEnhancer)\n);\n","import { MiddlewareAPI } from \"redux\";\nimport { ThunkDispatchType, AppActions } from \"../..\";\n\nexport default ({ dispatch, getState }: MiddlewareAPI) => (\n  next: ThunkDispatchType\n) => (action: AppActions) => {\n  next(action);\n  /*switch (action.type) {\n    default:\n      return; //dispatch(setPBBError(\"55555\"));\n  }*/\n};\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n// import * as Sentry from \"@sentry/browser\";\nimport { Provider } from \"react-redux\";\n\nimport { App } from \"./features\";\nimport { store } from \"./store\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}